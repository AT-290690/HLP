<- [SKETCH; MATH; DOM; EVENT; STYLE] [LIBRARY]; 
<- [make_scene; make_group; make_rectangle; update; play; draw; 
    insert_into_group; background; width; height; set_position;
    set_fill; set_stroke; no_fill; no_stroke] [SKETCH]; 
<- [random_int] [MATH];
<- [set_style; make_user_interface; make_button; make_container; set_text_content] [DOM];
<- [on_mouse_click] [EVENT];
<- [cursor_pointer; padding; text_color; units_pixel; background_color; border] [STYLE];

' [view; next; alive; x; y];

:= [W; 415; H; 415;
    N; 20; 
    factor; 1; 
    r; * [N; factor];
    h; * [r; factor; -1];
    COLORS; .: [ "#ccc"; 0]; 
    cols; N; rows; N; cells; .: []; 
    bound; - [* [rows; cols]; 1];
    get_cell; -> [x; y; : [cells; + [x; * [rows; y]]]]; 

  make_grid; -> [cells; .. [
:= [cells_container; make_group []]; 

@ [bound; -> [count; .. [
  ? [! [% [count; cols]]; += [h; r]]; 
  := [is_alive; random_int [0; 1];
      next_is_alive; random_int [0; 1]; 
      rect; |> [make_rectangle [% [* [count; r]; * [r; cols]]; h; r; r]; 
        set_fill [: [COLORS; is_alive]];
        no_stroke []];
      cell; :: [alive; is_alive;
                next; next_is_alive;
                view; rect]]; 
  insert_into_group [cells_container; rect]; 
  .:= [cells; cell]; 
  ]]]; cells_container]];

iterate_cells; -> [cells; callback; .. [
:= [y; -1]; 
>> [cells; -> [cell; i; cells; .. [
  = [y; ? [% [i; rows]; 
  y; += [y]]]; 
  := [x; % [i; cols]; 
      cell; get_cell [x; y]]; 
  callback [cell; x; y]]]]]]; 

directions; .: [
  :: [x; 0; y; 1]; 
  :: [x; 1; y; 0]; 
  :: [x; -1; y; 0]; 
  :: [x; 0; y; -1]; 
  :: [x; 1; y; -1]; 
  :: [x; -1; y; -1]; 
  :: [x; 1; y; 1]; 
  :: [x; -1; y; 1]]; 

adjacent; -> [x1; y1; .. [
:= [sum; 0]; 
>> [directions; -> [dir; .. [
  := [cell; get_cell [
    + [x1; . [dir; x]]; 
    + [y1; . [dir; y]]]]; 
  = [sum; + [sum; ? [cell; . [cell; alive]; 0]]]]]]; sum]];

update_state; -> [iterate_cells [cells; -> [cell; x; y; .. [
  := [is_alive; . [cell; alive]; 
  neighbors; adjacent [x; y]]; 
  ? [&& [is_alive; < [neighbors; 2]]; 
    .= [cell; next; 0]; 
      ? [&& [is_alive; > [neighbors; 3]]; 
        .= [cell; next; 0]; 
           ? [&& [! [is_alive]; 
             == [neighbors; 3]]; 
  .= [cell; next; 1]]]]]]]]; 

 trottle; -> [delta; value; callback; 
             ? [! [% [delta; value]]; 
                       callback []]];

render; -> [iterate_cells [cells; -> [cell; x; y; .. [
  := [is_alive; . [cell; alive]]; 
  set_fill [. [cell; view]; : [COLORS; is_alive]]; 
  .= [cell; alive; . [cell; next]]]]]]]; 

make_scene [W; H; -> [.. [
 |> [cells; 
    make_grid []; 
    set_position [N; N]];
  draw [0; -> [delta; fps; trottle [delta; 8; -> [.. [
    update_state []; 
    render []]]]]]; 
  play []]]];

make_user_interface [];
make_container [|> [
  make_button [];
  set_text_content["RESTART"];
  set_style [cursor_pointer []; 
  background_color ["#000"]; 
  text_color ["#fff"]];
  on_mouse_click [-> [
    >> [cells;  -> [current; .. [
    .= [current; alive; random_int [0; 1]];
    .= [current; next; random_int [0; 1]]]]]]]]];


    <- [SKETCH] [LIBRARY];
<- [make_scene; set_stroke; no_fill;
    make_group; background; get_rotation;
    width; height; no_stroke; 
    draw; make_rectangle; play; 
    set_fill; set_opacity; set_rotation] [SKETCH];
make_scene [300; 300; -> [.. [

:= [arr; .: []];
:= [strokes; .: []];
:= [shadows; .: []];

@ [16; -> [i; .:= [arr; |> [
  make_rectangle [width [0.5]; height [0.5]; + [10; * [i; 10]]; + [10; * [i; 10]]]; 
  set_rotation [* [i; 0.5]]; 
  set_opacity [* [0.02; i]]; 
  set_fill ["crimson"]; 
  no_stroke []]]]];

@ [16; -> [i; .:= [strokes; |> [
  make_rectangle [width [0.5]; height [0.5]; + [10; * [i; 10]]; + [10; * [i; 10]]]; 
  set_rotation [* [i; 0.5]]; 
  set_opacity [- [1; * [0.01; i]]]; 
  set_stroke ["darkred"]; 
  no_fill []]]]];

@ [10; -> [i; .:= [shadows; |> [
  make_rectangle [width [0.5]; height [0.5]; + [10; * [i; 10]]; + [10; * [i; 10]]]; 
  set_rotation [* [i; 0.5]]; 
  set_opacity [* [0.03; i]]; 
  set_fill ["black"]; 
  no_stroke []]]]];
draw [0; -> [frame; delta; .. [
  >> [arr; 
        -> [leaf; i; a; set_rotation [leaf; 
        + [get_rotation [leaf]; * [i; 0.001]]]]];
  >> [strokes; 
        -> [leaf; i; a; set_rotation [leaf; 
        + [get_rotation [leaf]; * [i; 0.001]]]]];
  >> [shadows; 
        -> [leaf; i; a; set_rotation [leaf;
        + [get_rotation [leaf]; * [i; 0.001]]]]]]]];
play []]]];

<- [SKETCH; COLOR; EVENT; DOM] [LIBRARY];
<- [make_scene; background; VECTOR; get_position;
  set_scale;  sprite_play; make_texture; sprite_pause; make_sprite; set_rotation; set_screen_size; set_origin; make_group; UTILS] [SKETCH];
<- [make_rgb_color] [COLOR];
<- [make_grid; CANVAS] [UTILS];
<- [on_key_down; on_key_up] [EVENT];
<- [get_body] [DOM];
<- [add_self; make_vector; set_length; multiply; multiply_self;
    LEFT; RIGHT; UP; DOWN] [VECTOR];
:= [moving; 0];
:= [directions; |> [
    .: [UP []; DOWN []; LEFT []; RIGHT []]; 
    >>. [-> [vec; f; m; multiply_self [vec; 3]]]]];
make_scene [500; 500; -> [.. [
:= [src; "https://i.imgur.com/G2zkd5t.png"];
 background ["#ddd"];
 := [cols; 12; rows; 4; rate; 18];
 := [drifter; |> [
   make_sprite [src; 250; 120; cols; rows; rate; 0]; 
   set_scale [1.7]]]; 
 := [pos; get_position [drifter]];
 := [animate_move; -> [dir; sprite_play [drifter; * [12; dir]; - [* [12; + [dir; 1]]; 1]]]];
 := [move; -> [dir; .. [
  ? [!= [moving; dir]; animate_move [dir]];
   = [moving; dir];
  |> [pos; add_self [:. [directions; dir]]]]]];
 := [stop; -> [.. [sprite_pause [drifter]; = [moving; -1]]]];
 := [body; get_body []];
  on_key_down [body; -> [key; .. [
   ? [== [key; "w"]; move [0]];
   ? [== [key; "s"]; move [1]];
   ? [== [key; "a"]; move [2]];
   ? [== [key; "d"]; move [3]]]]]; 
  on_key_up [body; -> [key; stop []]]]]; CANVAS []];
make_grid [20; 15];
<- [MATH; SKETCH] [LIBRARY];
<- [make_scene; make_line; update; width; height] [SKETCH];
<- [sin; cos; PI] [MATH];

make_scene [:= [WIDTH; 500]; := [HEIGHT; 500]; -> [..[
  := [theta; 0.8];
  := [step; 0.7];
  := [angle; * [PI; 0.5]];
  := [length; height [0.25]];
  := [level; 0];
  := [max_level; 10];
  := [x; width [0.5]];
  := [y; height [1]];

  ;; ARRAY FOR STACK OF TREE POSITIONS
  := [x_stack; .: [max_level]];
  := [y_stack; .: [max_level]];

  := [draw_branch; -> [dir; .. [

  ;; CALCULATE NEXT POINT
  := [delta_x; * [length; cos [angle]]];
  := [delta_y; * [length; sin [angle]]];
  := [next_x; + [x; delta_x]];
  := [next_y; - [y; delta_y]];

  ;; DRAW A SINGLE BRANCH!
  make_line [x; y; next_x; next_y];
  .:= [x_stack; x];
  .:= [y_stack; y];
  = [x; next_x];
  = [y; next_y];
  = [level; + [level; 1]];
  = [angle; + [angle; * [theta; dir]]];
  = [length; * [length; step]];

  ;; EXIT CONDITION OF RECURSION
  ? [< [level; max_level]; .. [
    draw_branch [1];
    draw_branch [-1]]]; 
  = [angle; - [angle; * [theta; dir]]];
  = [length; / [length; step]];
  = [level; - [level; 1]];
  = [x; |. [x_stack]];
  = [y; |. [y_stack]]]]];

  draw_branch [0];
  update []]]]